version: '2'
services:

  pyalgo:
    network_mode: bridge
    depends_on:
      - postgresql
      - spark-master
    build:
      context: ../
    container_name: tests_pyalgo
    ports:
      - "8000:8000"
    environment:
      GUNICORN_PORT: 8000
      OPENTSDB_READ_HOST: opentsdb
      OPENTSDB_READ_PORT: 4242
      OPENTSDB_WRITE_HOST: opentsdb
      OPENTSDB_WRITE_PORT: 4242
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077
      TDM_HOST: datamodel
      TDM_PORT: 8080
    links:
      - opentsdb
      - datamodel
      - spark-master
      - postgresql

  spark-master:
    network_mode: bridge
    image: ${IMAGE_SPARK}
    ports:
      - "10000:8080"
      - "7077:7077"
    environment:
      SPARK_MODE: master
    links:
      - opentsdb
      - datamodel

  spark-worker:
    network_mode: bridge
    build:
      context: ../
    container_name: tests_spark-worker
    links:
      - spark-master
      - opentsdb
      - datamodel
      - postgresql
    depends_on:
      - spark-master
    ports:
      - "10001:8081"
    environment:
      OPENTSDB_READ_HOST: opentsdb
      OPENTSDB_READ_PORT: 4242
      OPENTSDB_WRITE_HOST: opentsdb
      OPENTSDB_WRITE_PORT: 4242
      POSTGRES_HOST: postgresql
      POSTGRES_PORT: 5432
      SPARK_MASTER_HOST: spark-master
      SPARK_MASTER_PORT: 7077
      SPARK_MODE: slave
      TDM_HOST: datamodel
      TDM_PORT: 8080

  datamodel:
    network_mode: bridge
    image: ${IMAGE_DATAMODEL}
    ports:
      - "8087:8080"
    environment:
      TOMCAT_HOST: datamodel
      TOMCAT_PORT: 8080
      DB_HOST: postgresql
      DB_PORT: 5432
      OPENTSDB_HOST: opentsdb
      OPENTSDB_PORT: 4242
      C3P0_ACQUIRE_INCREMENT: 2
      C3P0_MAX_SIZE: 20
      C3P0_IDLE_TEST_PERIOD: 50
      C3P0_MAX_STATEMENTS: 15
      C3P0_MIN_SIZE: 5
      C3P0_TIMEOUT: 90
    depends_on:
      - postgresql
      - opentsdb
    links:
      - postgresql
      - opentsdb

  postgresql:
    network_mode: bridge
    image: ${IMAGE_POSTGRES}
    environment:
      POSTGRES_PASSWORD: ikats
      POSTGRES_USER: ikats
      POSTGRES_DB: ikats
      PGDATA: /home/postgres/psql/9.5/ikats
    ports:
      - "5432:5432"
    volumes:
      - ${DOCKER_BINDINGS_POSTGRES}:/home/postgres/psql/9.5

  hbase:
    network_mode: bridge
    hostname: hbase
    image: ${IMAGE_HBASE}
    restart: always
    ports:
      # Master port
      - "16010:16010"
      - "16030:16030"
      # Zk port
      - "2181:2181"
      - "38951:38951"
      - "9090:9090"
      - "9095:9095"
      - "28080:8080"
      - "8085:8085"
    volumes:
      - ${DOCKER_BINDINGS_HBASE}:/data/hbase

  opentsdb:
    network_mode: bridge
    image: ${IMAGE_OPENTSDB}
    depends_on:
      - hbase
    links:
      - hbase
    restart: always
    ports:
      - "4242:4242"
    environment:
      TSD_CONF_tsd__storage__hbase__zk_quorum: hbase
      TSD_CONF_tsd__network__port: 4242
      TSD_CONF_tsd__http__staticroot: /usr/share/opentsdb/static/
      TSD_CONF_tsd__http__cachedir: /tmp/opentsdb
      TSD_CONF_tsd__http__request__enable_chunked: "true"
      TSD_CONF_tsd__http__request__max_chunk: 2000000000
      TSD_CONF_tsd__core__auto_create_metrics: "true"
      TSD_CONF_tsd__storage__max_tags: 8
      TSD_CONF_tsd__storage__uid__width__metric: 3
      TSD_CONF_tsd__storage__uid__width__tagk: 3
      TSD_CONF_tsd__storage__uid__width__tagv: 3
      TSD_CONF_tsd__http__query__allow_delete: "true"
      TSD_CONF_tsd__core__uid__random_metrics: "true"
      TSD_CONF_tsd__http__show_stack_trace: "true"
      TSD_CONF_tsd__storage__enable_compaction: "false"
      TSD_CONF_tsd__storage__flush_interval: 500
      TSD_CONF_tsd__storage__fix_duplicates: "true"
      TSD_CONF_tsd__http__request__cors_domains: "*"
